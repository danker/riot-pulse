[project]
name = "riot-pulse"
version = "0.1.0"
description = "AI-powered social listening for Riot Games communities"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "agno>=1.7.7",
    "python-dotenv>=1.0.0",
    "openai>=1.98.0",
    "anthropic>=0.40.0",
    "pyyaml>=6.0.0",
    "litellm>=1.0.0",
]

[project.optional-dependencies]
dev = [
    # Core development tools
    "ruff>=0.1.15",              # Modern linting + formatting
    "mypy>=1.8.0",               # Static type checking
    
    # Testing framework
    "pytest>=7.4.0",             # Testing framework
    "pytest-cov>=4.1.0",         # Coverage reporting
    "pytest-asyncio>=0.21.0",    # Async testing support
    
    # Development workflow
    "pre-commit>=3.6.0",         # Git hooks for code quality
]

[project.scripts]
riot-pulse = "riot_pulse.cli:main"

# Ruff configuration
[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

# Per-file ignores for specific use cases
[tool.ruff.lint.per-file-ignores]
"**/llm/adapters/__init__.py" = ["F401"]  # Unused imports needed for dynamic loading
"**/llm/providers.py" = ["F401"]  # Unused imports needed for dynamic loading
"tests/**/*.py" = ["S101"]  # Allow assert statements in tests
"scripts/dev.py" = ["S602"]  # Allow shell=True in development scripts

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint.isort]
known-first-party = ["riot_pulse"]

# mypy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = false  # Too strict for gradual typing
warn_unused_configs = true
disallow_untyped_defs = false  # Gradual typing approach
check_untyped_defs = false  # Too strict for gradual typing
warn_redundant_casts = true
warn_unused_ignores = false  # Too strict for gradual typing
ignore_errors = false

[[tool.mypy.overrides]]
module = "agno.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "litellm.*"
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=riot_pulse",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--strict-markers",
    "-v",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["riot_pulse"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true
skip_covered = false

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.7",
    "types-PyYAML>=6.0.12.20240917",
]
